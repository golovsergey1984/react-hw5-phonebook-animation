{"version":3,"sources":["components/Logo/logo.module.css","components/main.module.css","transitions/fade.module.css","components/SearchForm/searchForm.module.css","transitions/slide.module.css","components/Logo/logo.js","components/ContactForm/contactForm.js","components/SearchForm/searchForm.js","components/ContactList/contactList.js","components/DublicateNotification/dublicateNotification.js","components/App.js","index.js","components/ContactForm/contactForm.module.css","components/DublicateNotification/dublicate.module.css","components/ContactList/contactList.module.css"],"names":["module","exports","Logo","isLoad","CSSTransition","in","timeout","classNames","slideTransition","unmountOnExit","className","styles","ContactForm","this","props","name","number","onError","onChangeInput","onContactToAdd","onSubmit","type","value","autoComplete","onChange","placeholder","error","Component","SearchForm","onChangeFilter","ContactList","contacts","onDeleteContact","TransitionGroup","component","map","item","key","id","onClick","DublicateNotification","status","fadeTransition","rules","messages","alpha","nameAlreadyExist","filter","contact","toLowerCase","numberAlreadyExist","App","state","dublicate","e","setState","target","resetError","preventDefault","nameExist","numberExist","length","validateAll","then","data","itemToAdd","shortid","generate","reset","catch","errors","formattedErrors","forEach","field","message","handleFilter","handleDelete","prevState","persistedContacts","localStorage","getItem","JSON","parse","prevProp","setTimeout","setItem","stringify","nameFiltered","includes","nameFilter","wrapper","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4c284304.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo-txt\":\"logo_logo-txt__37rfj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"main_wrapper__1da9q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fade_enter__1w75N\",\"enterActive\":\"fade_enterActive__1BNfk\",\"exit\":\"fade_exit__1AFK0\",\"exitActive\":\"fade_exitActive__3LiKT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchForm-box\":\"searchForm_searchForm-box__3hZvB\",\"searchForm-wrapper\":\"searchForm_searchForm-wrapper__K0bJh\",\"searchForm-input\":\"searchForm_searchForm-input__3JGVo\",\"searchForm-input-title\":\"searchForm_searchForm-input-title__3BcRT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__30S-D\",\"enterActive\":\"slide_enterActive__3PB8r\",\"exit\":\"slide_exit__2ymzO\",\"exitActive\":\"slide_exitActive__jxfq5\"};","import React from 'react';\r\nimport { CSSTransition } from \"react-transition-group\"\r\nimport styles from './logo.module.css';\r\nimport slideTransition from '../../transitions/slide.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Logo = (isLoad) =>\r\n    <CSSTransition in={isLoad.isLoad} timeout={1000} classNames={slideTransition} unmountOnExit>\r\n\r\n        <h1 className={styles[\"logo-txt\"]}>Phonebook</h1>\r\n\r\n    </CSSTransition>\r\n\r\nexport default Logo;\r\n\r\nLogo.propTypes = {\r\n    isLoad: PropTypes.bool.isRequired,\r\n};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './contactForm.module.css';\r\n\r\n\r\nexport default class ContactForm extends Component {\r\n\r\n    render() {\r\n        const { name, number, onError, onChangeInput, onContactToAdd } = this.props;\r\n        return (\r\n\r\n            <div className={styles['contactForm-box']}>\r\n                <div className={styles['contactForm-wrapper']}>\r\n                    <form onSubmit={onContactToAdd} >\r\n                        <label>\r\n                            <p className={styles['contactForm-input-title']}>Name</p>\r\n                            <input\r\n                                type=\"text\"\r\n                                className={styles['contactForm-input']}\r\n                                name=\"name\"\r\n                                value={name}\r\n                                autoComplete=\"off\"\r\n                                onChange={onChangeInput}\r\n                                placeholder=\"Type contact name...\"\r\n                            />\r\n                            {onError && <span className={styles.error}>{onError.name}</span>}\r\n                        </label>\r\n\r\n\r\n                        <label>\r\n                            <p className={styles['contactForm-input-title']}>Number</p>\r\n                            <input\r\n                                type=\"text\"\r\n                                className={styles['contactForm-input']}\r\n                                name=\"number\"\r\n                                value={number}\r\n                                autoComplete=\"off\"\r\n                                onChange={onChangeInput}\r\n                                placeholder=\"Type contact number...\"\r\n                            />\r\n                            {onError && <span className={styles.error}>{onError.number}</span>}\r\n                        </label>\r\n                        <div className={styles['contactForm-btn-box']}>\r\n                            <button type=\"submit\" className={styles['contactForm-btn']}>Add contact</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div >\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nContactForm.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n    onContactToAdd: PropTypes.func.isRequired,\r\n    onChangeInput: PropTypes.func.isRequired,\r\n    onError: PropTypes.shape({\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n    }),\r\n};","import React from 'react';\r\nimport styles from './searchForm.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SearchForm = ({ value, onChangeFilter }) => (\r\n    <div className={styles['searchForm-box']}>\r\n        <div className={styles['searchForm-wrapper']}>\r\n            <p className={styles['searchForm-input-title']}>Find contacts by name</p>\r\n            <input\r\n                type=\"text\"\r\n                className={styles['searchForm-input']}\r\n                placeholder=\"Type to filter names...\"\r\n                value={value}\r\n                onChange={onChangeFilter}\r\n            ></input>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default SearchForm;\r\n\r\nSearchForm.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChangeFilter: PropTypes.func.isRequired,\r\n};","import React from 'react';\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\"\r\nimport slideTransition from '../../transitions/slide.module.css';\r\nimport styles from './contactList.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactList = ({ contacts = [], onDeleteContact }) => (\r\n    <div>\r\n        <TransitionGroup component=\"ul\" className={styles['contactList-ul']}>\r\n\r\n            {contacts.map(item => (\r\n                <CSSTransition key={item.id} timeout={1000} classNames={slideTransition} unmountOnExit>\r\n                    <li className={styles['contactList-item-box']}>\r\n                        <div className={styles['contactList-item-wrapper']}>\r\n                            <div className={styles['contactList-item-name']}>{item.name}</div>\r\n                            <div className={styles['contactList-item-number']}>{item.number}</div>\r\n                            <div className={styles['contactList-item-btn']}>\r\n                                <button\r\n                                    type=\"button\"\r\n                                    name=\"delte\"\r\n                                    onClick={() => onDeleteContact(item.id)}\r\n                                    className={styles['contactList-btn-delete']}\r\n                                >\r\n                                    X\r\n            </button>\r\n                            </div>\r\n\r\n\r\n\r\n                        </div>\r\n                    </li>\r\n                </CSSTransition>\r\n            ))}\r\n\r\n        </TransitionGroup>\r\n    </div>\r\n);\r\n\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n    onDeleteContact: PropTypes.func.isRequired,\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            number: PropTypes.string.isRequired,\r\n        }),\r\n    ),\r\n};","import React from 'react';\r\nimport { CSSTransition } from \"react-transition-group\"\r\nimport fadeTransition from '../../transitions/fade.module.css';\r\nimport styles from './dublicate.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DublicateNotification = (status) => (\r\n\r\n    < CSSTransition in={status.status} timeout={1000} classNames={fadeTransition} unmountOnExit>\r\n        <div className={styles['dublicate-box']}><p className={styles['dublicate-txt']}>Contact already exist!</p></div>\r\n    </CSSTransition >\r\n\r\n);\r\n\r\nexport default DublicateNotification;\r\n\r\nDublicateNotification.propTypes = {\r\n    status: PropTypes.bool.isRequired,\r\n};","import React, { Component, Fragment } from 'react';\r\nimport shortid from 'shortid';\r\nimport Logo from './Logo/logo.js';\r\nimport styles from './main.module.css';\r\nimport ContactForm from './ContactForm/contactForm.js';\r\nimport SearchForm from \"./SearchForm/searchForm.js\";\r\nimport ContactList from \"./ContactList/contactList.js\";\r\nimport DublicateNotification from \"./DublicateNotification/dublicateNotification.js\";\r\nimport { validateAll } from 'indicative/validator';\r\n\r\nconst rules = {\r\n    name: 'required|alpha',\r\n    number: 'required|number',\r\n};\r\n\r\nconst messages = {\r\n    alpha: 'Name must contain letters only!!',\r\n    number: 'Phone must contain numeral only!!',\r\n    'name.required': 'this field is required',\r\n    'number.required': 'this field is required',\r\n};\r\n\r\nconst nameFilter = (filter, contacts) => {\r\n    return contacts.filter(contact =>\r\n        contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n};\r\n\r\nconst nameAlreadyExist = (name, contacts) => {\r\n    return contacts.filter(\r\n        contact => contact.name.toLowerCase() === name.toLowerCase(),\r\n    );\r\n};\r\nconst numberAlreadyExist = (number, contacts) => {\r\n    return contacts.filter(\r\n        contact => contact.number.toLowerCase() === number.toLowerCase(),\r\n    );\r\n};\r\n\r\nexport default class App extends Component {\r\n    state = {\r\n        isLoad: false,\r\n        contacts: [],\r\n        name: \"\",\r\n        number: '',\r\n        filter: \"\",\r\n        dublicate: false,\r\n    }\r\n    componentDidMount() {\r\n        this.setState({ isLoad: true })\r\n        const persistedContacts = localStorage.getItem(\"contacts\");\r\n\r\n        if (persistedContacts) {\r\n            this.setState({ contacts: JSON.parse(persistedContacts) })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProp, prevState) {\r\n        if (prevState.dublicate !== this.state.dublicate) {\r\n            setTimeout(() => { this.setState({ dublicate: false }) }, 3000)\r\n        }\r\n        if (prevState.contacts !== this.state.contacts) {\r\n            localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\r\n        }\r\n    }\r\n\r\n    onChangeInput = e => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n        this.resetError();\r\n    }\r\n\r\n    /*\r\n    Без валидатора и метод concat     \r\n    onContactToAdd = e => {\r\n            e.preventDefault();\r\n            const { name, number, contacts } = this.state;\r\n            const nameExist = nameAlreadyExist(name, contacts);\r\n            const numberExist = numberAlreadyExist(number, contacts);\r\n            if ((nameExist.length !== 0) && (numberExist.length !== 0)) {\r\n                this.setState({ dublicate: true })\r\n                return\r\n            }\r\n            const itemToAdd = {\r\n                name: name,\r\n                number: number,\r\n                id: shortid.generate(),\r\n            };\r\n            this.setState({ contacts: contacts.concat(itemToAdd) })\r\n            this.reset();\r\n        } */\r\n\r\n    onContactToAdd = e => {\r\n        e.preventDefault();\r\n\r\n        const { name, number, contacts } = this.state;\r\n        const nameExist = nameAlreadyExist(name, contacts);\r\n        const numberExist = numberAlreadyExist(number, contacts);\r\n        if ((nameExist.length !== 0) && (numberExist.length !== 0)) {\r\n            this.setState({ dublicate: true })\r\n            return\r\n        }\r\n\r\n\r\n        validateAll({ name, number }, rules, messages)\r\n            .then(data => {\r\n                const itemToAdd = {\r\n                    name: this.state.name,\r\n                    number: this.state.number,\r\n                    id: shortid.generate(),\r\n                };\r\n\r\n                this.setState(state => ({\r\n                    contacts: [...state.contacts, itemToAdd],\r\n                }));\r\n\r\n                this.reset();\r\n            })\r\n            .catch(errors => {\r\n                const formattedErrors = {};\r\n\r\n                errors.forEach(error => {\r\n                    formattedErrors[error.field] = error.message;\r\n                });\r\n                this.setState({ errors: formattedErrors });\r\n            })\r\n    };\r\n\r\n    handleFilter = e => {\r\n        this.setState({ filter: e.target.value });\r\n    };\r\n\r\n    handleDelete = id => {\r\n        this.setState(prevState => ({\r\n            contacts: prevState.contacts.filter(contact => contact.id !== id),\r\n        }));\r\n    };\r\n\r\n    resetError = () => {\r\n        this.setState(state => ({\r\n            errors: null,\r\n        }));\r\n    };\r\n\r\n    reset = () => {\r\n        this.setState(state => ({\r\n            name: '',\r\n            number: '',\r\n        }));\r\n    };\r\n\r\n    render() {\r\n        const { isLoad, name, number, filter, contacts, dublicate, errors } = this.state;\r\n        const nameFiltered = nameFilter(filter, contacts);\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className={styles.wrapper}>\r\n                    <Logo isLoad={isLoad} />\r\n                    <ContactForm\r\n                        name={name}\r\n                        number={number}\r\n                        onChangeInput={this.onChangeInput}\r\n                        onContactToAdd={this.onContactToAdd}\r\n                        onError={errors}\r\n                    />\r\n                    {contacts.length > 1 &&\r\n                        <SearchForm\r\n                            value={filter}\r\n                            onChangeFilter={this.handleFilter}\r\n                        />}\r\n                    <ContactList\r\n                        contacts={nameFiltered}\r\n                        onDeleteContact={this.handleDelete}\r\n                    />\r\n\r\n                </div>\r\n                {dublicate &&\r\n                    <DublicateNotification status={dublicate} />}\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm-box\":\"contactForm_contactForm-box__3fGF9\",\"contactForm-wrapper\":\"contactForm_contactForm-wrapper__3_mCz\",\"contactForm-input\":\"contactForm_contactForm-input__3ftrJ\",\"contactForm-input-title\":\"contactForm_contactForm-input-title__1IIj0\",\"contactForm-btn\":\"contactForm_contactForm-btn__6UM00\",\"error\":\"contactForm_error__25cg5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dublicate-box\":\"dublicate_dublicate-box__14EzJ\",\"dublicate-txt\":\"dublicate_dublicate-txt__34jOq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList-ul\":\"contactList_contactList-ul__1Cofg\",\"contactList-item-box\":\"contactList_contactList-item-box__15xCs\",\"contactList-item-wrapper\":\"contactList_contactList-item-wrapper__1SGw-\",\"contactList-item-name\":\"contactList_contactList-item-name__2SNED\",\"contactList-item-number\":\"contactList_contactList-item-number__1bmHo\",\"contactList-item-btn\":\"contactList_contactList-item-btn__33ShJ\",\"contactList-btn-delete\":\"contactList_contactList-btn-delete__1Kx9D\"};"],"sourceRoot":""}